###############################################
## CONFIGURATION DE L'UTILITAIRE D'ARCHIVAGE ##
###############################################

## Emplacement des logs de l'utilitaire
emplacementLog="./archive.log"

## En cas d'erreur, renvoyer le motif à la sortie standard en plus des logs
# 0 : vrai
# 1 : faux
logStdout=0

## Adresse de l'archive ZIP contenant un fichier SQL
#archiveURL="https://37.110.193.30:8888/test_export.sql.zip"
archiveURL="http://176.190.35.242:80/sqldump.zip"


###############################################
## Adresse du serveur sur lequel on veut archiver les dumps
adresseArchivage="176.190.35.242"

## Utilisateur qui va recevoir les sauvegardes, sur le serveur d'archivage
usernameSSH="justin"

## Emplacement des sauvegardes, en chemin absolu (possiblité d'utiliser `~`)
pathSSH="~/Sauvegardes"

## Durée de conservation des archives sur le serveur, en jours
dureeConservation="30"


###############################################
## Adresses mail sur lesquelles on veut envoyer un état de la dernière exécution (succès / échec). Séparer chaque adresse par des espaces, laisser vide pour désactiver
mail=()

## Objet des mails en cas de succès
objSucces="Archivage $(date) réussi"
## Objet des mails en cas d'échec
objEchec="Archivage $(date) échoué"

## Joindre le log
# 0 : Jamais
# 1 : En cas d'échec
# 2 : Toujours
joindreLog="1"

## TODO gérer l'authentification sur le serveur de messagerie

